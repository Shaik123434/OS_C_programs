#include <stdio.h>

// Structure to represent a process
struct Process {
    int id;
    int burst_time;
    int remaining_time; // Remaining time to complete the process
};

// Function to simulate the Round Robin scheduling algorithm
void roundRobin(struct Process processes[], int n, int time_quantum) {
    int remaining_processes = n;

    // Array to store waiting time for each process
    int waiting_time[n];
    for (int i = 0; i < n; i++) {
        waiting_time[i] = 0;
    }

    // Simulate Round Robin until all processes are completed
    int time = 0;
    while (remaining_processes > 0) {
        for (int i = 0; i < n; i++) {
            if (processes[i].remaining_time > 0) {
                // Execute the process for the time quantum or until it completes
                int execute_time = (processes[i].remaining_time < time_quantum) ? processes[i].remaining_time : time_quantum;
                processes[i].remaining_time -= execute_time;

                // Update waiting time for the process
                waiting_time[i] += time - processes[i].id * time_quantum;

                // Update total time
                time += execute_time;

                // Check if the process is completed
                if (processes[i].remaining_time == 0) {
                    remaining_processes--;
                }
            }
        }
    }

    // Calculate and display average waiting time
    float avg_waiting_time = 0;
    for (int i = 0; i < n; i++) {
        avg_waiting_time += waiting_time[i];
    }
    avg_waiting_time /= n;

    printf("Average Waiting Time: %.2f\n", avg_waiting_time);
}

int main() {
    int n, time_quantum;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process processes[n];

    // Input burst times for each process
    for (int i = 0; i < n; i++) {
        processes[i].id = i;
        printf("Enter the burst time for Process %d: ", i);
        scanf("%d", &processes[i].burst_time);
        processes[i].remaining_time = processes[i].burst_time;
    }

    printf("Enter the time quantum: ");
    scanf("%d", &time_quantum);

    // Call the Round Robin function
    roundRobin(processes, n, time_quantum);

    return 0;
}
